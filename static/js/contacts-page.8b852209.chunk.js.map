{"version":3,"file":"static/js/contacts-page.8b852209.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.js","redux/contacts/selectors.js","components/ContactList/Contact.styled.js","components/ContactList/ContactList.js","components/ContactsView.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const PhonebookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n`;\nexport const PhonebookLabel = styled.label`\ndisplay: flex;\n    color: #a3d0c3;\n  font-size: 16px;\n  vertical-align: middle \n  display: block;\n  margin-bottom: 15px;\n`;\n\nexport const PhonebookField = styled.input`\n  margin-bottom: 25px;\n  width: 100%;\n  border: 1px transparent solid;\n  background: #f9f0da;\n  height: 42px;\n  padding-left: 15px;\n  border-radius: 10px;\n  &:focus:not(.focus-visible) {\n    outline: 0 !important;\n    box-shadow: none !important;\n  }\n  &:focus,\n  &:focus-visible {\n    border: 1px #a3d0c3 solid;\n  }\n`;\nexport const PhonebookButton = styled.button`\n  width: 200px;\n  padding: 10px;\n  border-radius: 10px;\n  background: #a3d0c3;\n  border: none;\n  color: #f9f0da;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover,\n  &focus {\n    color: #a3d0c3;\n    background: #f9f0da;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport SyncLoader from 'react-spinners/SyncLoader';\nimport { FcDataRecovery } from 'react-icons/fc';\nimport { useAddContactMutation } from '../../redux/contacts/contactsSlice';\nimport {\n  PhonebookForm,\n  PhonebookLabel,\n  PhonebookField,\n  PhonebookButton,\n} from \"./Form.styled\";\nimport { MdAccountBox, MdPhoneIphone } from \"react-icons/md\";\n\nexport default function FormContact({ contacts }) {\n  const [createContact, { isLoading }] = useAddContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    const normalizeName = contact.name.toLowerCase();\n    if (contacts.some(item => item.name.toLowerCase() === normalizeName)) {\n      return toast.info(`${contact.name} is already in your contacts`, {\n        icon: <FcDataRecovery size=\"30px\" />,\n      });\n    }\n    createContact(contact);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <PhonebookForm className=\"phonebook-form\" onSubmit={handleSubmit}>\n          <PhonebookLabel>\n          <PhonebookField\n            type=\"text\"\n            value={name}\n            onChange={evt => setName(evt.target.value)}\n            name=\"name\"\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n            <MdAccountBox style={{ verticalAlign: \"middle\" }} size=\"42px\" />\n          </PhonebookLabel>          \n          <PhonebookLabel>\n          <PhonebookField\n            type=\"tel\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            value={number}\n            onChange={evt => setNumber(evt.target.value)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n            <MdPhoneIphone style={{ verticalAlign: \"middle\" }} size=\"42px\" />\n          </PhonebookLabel> \n      <PhonebookButton type=\"submit\">\n        {isLoading ? <SyncLoader color=\"#ffffff\" size={8} /> : 'Add contacts'}\n      </PhonebookButton>\n    </PhonebookForm>\n  );\n}\nFormContact.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","export const getFilter = (state) => state.filter;\n","import styled from \"@emotion/styled\";\n\nexport const ContactList = styled.ul`\n  padding: 0;\n  margin: 0;\n  width: 300px;\n`;\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0;\n  border-bottom: 1px #a3d0c3 solid;\n`;\nexport const ContactText = styled.p`\n  margin-right: 0;\n`;\nexport const ContactBtn = styled.button`\n  border: none;\n  border-radius: 6px;\n  outline: none;\n  background: #a3d0c3;\n  height: 25px;\n  width: 42px;\n  cursor: pointer;\n  font-size: 16px;\n  color: #f9f0da;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/selectors.js\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport {\n  ContactBtn,\n  ContactItem,\n  ContactList,\n  ContactText,\n} from \"./Contact.styled.js\";\n\nexport default function ContactsList({ contacts, isFetching, onDelete }) {\n  const filter = useSelector(getFilter);\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts?.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n  const contactsNormalize = getVisibleContacts();\n\n  return (\n    <>\n      <ContactList>\n        {contactsNormalize.map(({ id, name, phone }) => (\n          <ContactItem key={id} id={id} name={name} number={phone}>\n            <ContactText>{name}:</ContactText>\n            <ContactText>{phone}</ContactText>\n            <ContactBtn onClick={() => onDelete(id)}>\n              <MdDeleteForever />\n            </ContactBtn>\n          </ContactItem>\n        ))}\n      </ContactList>\n    </>\n  );\n}\n","import {\n  useDeleteContactMutation,\n  useFetchContactsQuery,\n} from \"../redux/contacts/contactsSlice\";\nimport ContactsList from \"./ContactList/ContactList\";\n\nexport const ContactsView = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  return (\n    <div>\n      {contacts && (\n        <ContactsList\n          contacts={contacts}\n          onDelete={deleteContact}\n          isFetching={isFetching}\n        />\n      )}\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const FilterForm = styled.form`\n  position: relative;\n  border-radius: 10px;\n  width: 300px;\n  background: #a3d0c3;\n`;\nexport const FilterInput = styled.input`\n  border: none;\n  outline: none;\n  background: transparent;\n  width: 100%;\n  height: 42px;\n  padding-left: 15px;\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/contactsSlice\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\nimport { FilterForm, FilterInput } from \"./Filter.styled\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const handleFilter = (e) => dispatch(filterContact(e.currentTarget.value));\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <FilterForm>\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleFilter}\n          value={filter}\n          placeholder=\"Search name\"\n          autoComplete=\"off\"\n        />\n      </FilterForm>\n    </>\n  );\n}\n","import React from 'react';\nimport { useFetchContactsQuery } from '../../redux/contacts/contactsSlice';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Form from '../Form/Form';\nimport { ContactsView } from '../ContactsView';\nimport Filter from '../Filter/Filter';\nimport '../AppBar.css';\n\nconst Phonebook = () => {\n  const { data } = useFetchContactsQuery();\n  const style = { marginLeft: '5em' };\n  return (\n    <div style={style}>\n      <ToastContainer position=\"top-right\" theme=\"colored\" />\n      <h1>Phonebook</h1>\n      <Form contacts={data} />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactsView />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from \"components/Phonebook/Phonebook\";\nexport default function ContactsPage() {  \n    return (\n      <Phonebook />\n  );}"],"names":["PhonebookForm","styled","PhonebookLabel","PhonebookField","PhonebookButton","FormContact","contacts","useAddContactMutation","createContact","isLoading","useState","name","setName","number","setNumber","className","onSubmit","e","preventDefault","contact","normalizeName","toLowerCase","some","item","toast","icon","size","addContact","type","value","onChange","evt","target","placeholder","pattern","title","required","style","verticalAlign","color","getFilter","state","filter","ContactList","ContactItem","ContactText","ContactBtn","ContactsList","onDelete","isFetching","useSelector","contactsNormalize","normalizeFilter","includes","getVisibleContacts","map","id","phone","onClick","ContactsView","useFetchContactsQuery","data","useDeleteContactMutation","deleteContact","FilterForm","FilterInput","Filter","dispatch","useDispatch","filterContact","currentTarget","autoComplete","marginLeft","position","theme","ContactsPage"],"sourceRoot":""}