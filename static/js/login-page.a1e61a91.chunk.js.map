{"version":3,"file":"static/js/login-page.a1e61a91.chunk.js","mappings":"4LAEe,SAASA,EAAT,GACb,OADyC,EAAXC,SAE5B,KAAK,IACHC,EAAAA,GAAAA,MAAY,gCACZ,MACF,KAAK,IACHA,EAAAA,GAAAA,MAAY,qCACZ,MACF,KAAK,IACHA,EAAAA,GAAAA,MAAY,4DACZ,MACF,QACEA,EAAAA,GAAAA,MAAY,MAEhB,OAAO,SAAC,KAAD,CAAgBC,SAAS,aAAaC,UAAW,IAAMC,MAAO,M,mFC8CvE,IA3DiB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAClD,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KASA,OACE,UAAC,IAAD,CAAWC,UAAU,YAArB,WACE,eAAIA,UAAU,OAAd,SAAsBX,KACtB,UAAC,IAAD,CAAMY,SAVW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAYG,EAAOE,EAAUE,GAC7BH,EAAS,IACTE,EAAY,IACZE,EAAQ,KAKN,WACE,UAAC,UAAD,CAAYC,UAAU,OAAtB,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACEI,KAAK,QACLC,MAAOX,EACPY,YAAY,cACZC,SAAU,SAAAL,GAAC,OAAIP,EAASO,EAAEM,OAAOH,QACjCI,QAAQ,yFACRC,UAAQ,OAGXlB,IACC,UAAC,UAAD,CAAYQ,UAAU,OAAtB,WACE,SAAC,UAAD,oBACA,SAAC,YAAD,CACEI,KAAK,OACLC,MAAOP,EACPQ,YAAY,YACZC,SAAU,SAAAL,GAAC,OAAIH,EAAQG,EAAEM,OAAOH,QAChCK,UAAQ,QAKd,UAAC,UAAD,CAAYV,UAAU,OAAtB,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEI,KAAK,WACLC,MAAOT,EACPU,YAAY,WACZC,SAAU,SAAAL,GAAC,OAAIL,EAAYK,EAAEM,OAAOH,QACpCI,QAAQ,uCACRpB,MAAM,+GACNqB,UAAQ,QAGZ,SAAC,IAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,SACGd,Y,qFCtDI,SAASsB,IAEtB,OACE,gBAAKC,MAFO,CAAE3B,SAAU,QAAS4B,IAAK,MAAOC,KAAM,MAAOC,UAAW,yBAErE,UACA,SAAC,IAAD,CACEC,MAAM,UACNC,KAAM,S,0ICYZ,EAhBc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACC,EAAA,EAAD,CACEhC,MAAM,aACNE,YAPqB,SAACG,EAAOE,GAC/BuB,EAASG,EAAAA,EAAAA,MAAqB,CAAE5B,MAAAA,EAAOE,SAAAA,MAOrCJ,YAAY,EACZF,WAAW,Y,oBCRF,SAASiC,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,YACxBC,GAAQF,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,UAC1B,OACE,UAACE,EAAA,EAAD,YACE,SAAC,EAAD,IACCJ,IAAa,SAACZ,EAAA,EAAD,CAASZ,UAAU,SAChC2B,IAAS,SAAC5C,EAAA,EAAD,CAAOC,QAAS2C,KAC1B,eAAG3B,UAAU,OAAb,kCACsB,SAAC,EAAA6B,KAAD,CAAMC,GAAG,WAAT","sources":["components/Error.jsx","components/Form/FormAuth.js","components/Loading.jsx","components/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { ToastContainer, toast } from 'react-toastify';\n\nexport default function Error({ message }) {\n  switch (message) {\n    case 400:\n      toast.error('Login error. Please re-login');\n      break;\n    case 401:\n      toast.error('Unauthorized. Please authenticate');\n      break;\n    case 500:\n      toast.error('Server is not available. Please retry your request later');\n      break;\n    default:\n      toast.error(null);\n  }\n  return <ToastContainer position=\"top-center\" autoClose={3000} limit={1} />;\n}","import { useState } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\n\nconst FormAuth = ({ title, buttonName, handleClick, isRegister }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleClick(email, password, name);\n    setEmail('');\n    setPassword('');\n    setName('');\n  };\n  return (\n    <Container className=\"mt-4 mb-5\">\n      <h1 className=\"mb-5\">{title}</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            placeholder=\"Enter email\"\n            onChange={e => setEmail(e.target.value)}\n            pattern=\"^[^а-я]+@[^а-я]+\\.[^а-я\\._'+;*^&=?~{}\\-\\.\\/,\\\\]+$\"\n            required\n          />\n        </Form.Group>\n        {isRegister && (\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              placeholder=\"Your name\"\n              onChange={e => setName(e.target.value)}\n              required\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={e => setPassword(e.target.value)}\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n            title=\"The password must contain 8 or more characters with at least one number, and one upper and lower case letter\"\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          {buttonName}\n        </Button>\n      </Form>\n    </Container>\n  );\n};\nexport default FormAuth;","import PropagateLoader from 'react-spinners/PropagateLoader';\n\nexport default function Loading() {\n  const style = { position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" };\n  return (\n    <div style={style}>\n    <PropagateLoader\n      color=\"#45d583\"\n      size={20}\n    />\n    </div>\n  );\n}","import { useDispatch } from 'react-redux';\nimport FormAuth from './Form/FormAuth';\nimport authOperations from 'redux/auth/authOperations';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = (email, password) => {\n    dispatch(authOperations.logIn({ email, password }));\n  };\n\n  return (\n    <FormAuth\n      title=\"Login Page\"\n      handleClick={handleSubmitForm}\n      isRegister={false}\n      buttonName=\"Log in\"\n    />\n  );\n};\nexport default Login;","import { useSelector } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport authSelectors from 'redux/auth/authSelectors';\nimport Login from '../components/Login';\nimport Loading from 'components/Loading';\nimport Error from 'components/Error';\n\nexport default function LoginPage() {\n  const isLoading = useSelector(authSelectors.getLoading);\n  const error = useSelector(authSelectors.getError);\n  return (\n    <Container>\n      <Login />\n      {isLoading && <Loading className=\"ms-3\" />}\n      {error && <Error message={error} />}\n      <p className=\"ms-3\">\n        Not registered yet? <Link to=\"register\">Click me</Link>\n      </p>\n    </Container>\n  );\n}\n\n\n// import { Container } from 'react-bootstrap';\n// import { useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import authSelectors from 'redux/auth/authSelectors';\n\n// export default function HomePage() {\n//   const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n//   const name = useSelector(authSelectors.getUsername);\n//   return (\n//     <Container className=\"mt-4\">\n//       {isLoggedIn ? (\n//         <h1>\n//           Welcome, {name}. To work with contacts go to\n//           <Link className=\"text-decoration-none\" to=\"contacts\">\n//             {' '}\n//             Contacts\n//           </Link>\n//         </h1>\n//       ) : (\n//         <>\n//           <h1>Hello</h1>\n//           <p>\n//             To use the application, you must{' '}\n//             <Link className=\"text-decoration-none\" to=\"register\">\n//               register\n//             </Link>{' '}\n//             or{' '}\n//             <Link className=\"text-decoration-none\" to=\"login\">\n//               login\n//             </Link>\n//           </p>\n//         </>\n//       )}\n//     </Container>\n//   );\n// }"],"names":["Error","message","toast","position","autoClose","limit","title","buttonName","handleClick","isRegister","useState","email","setEmail","password","setPassword","name","setName","className","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","pattern","required","variant","Loading","style","top","left","transform","color","size","dispatch","useDispatch","FormAuth","authOperations","LoginPage","isLoading","useSelector","authSelectors","error","Container","Link","to"],"sourceRoot":""}