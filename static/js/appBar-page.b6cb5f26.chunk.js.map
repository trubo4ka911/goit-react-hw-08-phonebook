{"version":3,"file":"static/js/appBar-page.b6cb5f26.chunk.js","mappings":"6PAEaA,EAAW,SAAC,GAAsB,EAApBC,KAAqB,IAAfC,EAAc,EAAdA,QAC/B,OACE,+BACE,SAACC,EAAA,EAAD,CAAQC,QAAQ,gBAAgBF,QAASA,EAAzC,uB,sCCIS,SAASG,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,eACzBP,GAAOM,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,aACnBC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,6BACA,6BACE,SAACC,EAAA,EAAD,CAAQC,GAAG,UAAUR,QAAQ,QAAQS,OAAO,KAAKC,UAAU,OAA3D,UACE,UAACC,EAAA,EAAD,YACE,SAACJ,EAAA,SAAD,CAAe,gBAAc,sBAC7B,UAACA,EAAA,WAAD,CAAiBK,GAAG,wBAApB,WACE,UAACC,EAAA,EAAD,CAAKH,UAAU,UAAf,WACE,SAAC,IAAD,CAAeI,GAAG,IAAlB,UACE,SAACD,EAAA,OAAD,qBAEDX,GACC,SAAC,IAAD,CAAeY,GAAG,WAAlB,UACE,SAACD,EAAA,OAAD,0BAGF,iCACE,SAAC,IAAD,CAAeC,GAAG,WAAlB,UACE,SAACD,EAAA,OAAD,8BAEF,SAAC,IAAD,CAAeC,GAAG,QAAlB,UACE,SAACD,EAAA,OAAD,4BAKPX,IAAc,SAACN,EAAD,CAAUC,KAAMA,EAAMC,QA9B3B,WAClBO,EAASU,EAAAA,EAAAA,wBAkCT,SAAC,KAAD,S","sources":["components/UserMenu.jsx","components/AppBar.jsx"],"sourcesContent":["import { Button } from 'react-bootstrap';\n\nexport const UserMenu = ({ name, onClick }) => {\n  return (\n    <>\n      <Button variant=\"outline-light\" onClick={onClick}>\n        Logout\n      </Button>\n    </>\n  );\n};","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Outlet } from 'react-router-dom';\nimport { UserMenu } from './UserMenu';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authSelectors from '../redux/auth/authSelectors';\nimport authOperations from '../redux/auth/authOperations';\nimport './AppBar.css'\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(authOperations.logOut());\n  };\n\n  return (\n    <main>\n    <header>\n      <Navbar bg=\"myGreen\" variant=\"light\" expand=\"lg\" className=\"mb-5\">\n        <Container>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <LinkContainer to=\"/\">\n                <Nav.Link>Home</Nav.Link>\n              </LinkContainer>\n              {isLoggedIn ? (\n                <LinkContainer to=\"contacts\">\n                  <Nav.Link>Contacts</Nav.Link>\n                </LinkContainer>\n              ) : (\n                <>\n                  <LinkContainer to=\"register\">\n                    <Nav.Link>Registration</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"login\">\n                    <Nav.Link>Login</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n            {isLoggedIn && <UserMenu name={name} onClick={handleClick} />}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n    <Outlet />\n  </main>\n  );\n}"],"names":["UserMenu","name","onClick","Button","variant","AppBar","isLoggedIn","useSelector","authSelectors","dispatch","useDispatch","Navbar","bg","expand","className","Container","id","Nav","to","authOperations"],"sourceRoot":""}